name: NixOS Configuration Validation

on:
  pull_request:
    branches: [ master, main ]
    paths:
      - 'flake.nix'
      - 'flake.lock'
      - 'hosts/**'
      - 'modules/**'
      - 'home-manager/**'
      - '.github/workflows/nixos-validation.yml'
  push:
    branches: [ master, main ]
    paths:
      - 'flake.nix'
      - 'flake.lock'
      - 'hosts/**'
      - 'modules/**'
      - 'home-manager/**'
      - '.github/workflows/nixos-validation.yml'

jobs:
  validate-flake:
    name: Validate Flake Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      - name: Check flake
        run: nix flake check --show-trace

      - name: Check flake metadata
        run: nix flake metadata

  format-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      - name: Check formatting
        run: |
          nix fmt -- --check .

  build-systems:
    name: Build System Configurations
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        system:
          - test-vm
          - mox
          - maia
          - mercury
          - ocean
          - devbox
          - testbox
          - ncrmro-laptop
          - catalystPrimary
          - ncrmro-workstation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          df -h

      - name: System info
        run: |
          echo "Available memory:"
          free -h
          echo "Available disk space:"
          df -h
          echo "CPU info:"
          nproc

      - name: Build system configuration
        run: |
          # Try to build system configuration with error handling
          if ! nix build .#nixosConfigurations.${{ matrix.system }}.config.system.build.toplevel --show-trace --max-jobs 2; then
            echo "Build failed for ${{ matrix.system }}"
            exit 1
          fi
        timeout-minutes: 90

  build-home-manager:
    name: Build Home Manager Configurations
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - "ncrmro@mox"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      - name: Build Home Manager configuration
        run: |
          # Try to build Home Manager configuration with error handling
          if ! nix build .#homeConfigurations."${{ matrix.config }}".activationPackage --show-trace --max-jobs 2; then
            echo "Build failed for ${{ matrix.config }}"
            exit 1
          fi
        timeout-minutes: 60