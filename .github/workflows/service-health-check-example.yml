name: Service Health Check via Tailscale

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup Tailscale
        uses: ./.github/actions/setup-tailscale
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          timeout: 30

      - name: Test Internal Services
        id: service-test
        run: |
          echo "Testing internal service connectivity..."
          
          # Track failures
          FAILURES=0
          
          # Test Grafana
          echo "Testing Grafana..."
          if curl -f -s --connect-timeout 10 http://grafana.ncrmro.com/api/health > /dev/null; then
            echo "✅ Grafana: OK"
          else
            echo "❌ Grafana: FAILED"
            FAILURES=$((FAILURES + 1))
          fi
          
          # Test Vaultwarden
          echo "Testing Vaultwarden..."
          if curl -f -s --connect-timeout 10 http://vaultwarden.ncrmro.com/alive > /dev/null; then
            echo "✅ Vaultwarden: OK"
          else
            echo "❌ Vaultwarden: FAILED"
            FAILURES=$((FAILURES + 1))
          fi
          
          # Test AdGuard Home
          echo "Testing AdGuard Home..."
          if curl -f -s --connect-timeout 10 http://adguard.home.ncrmro.com > /dev/null; then
            echo "✅ AdGuard Home: OK"
          else
            echo "❌ AdGuard Home: FAILED"
            FAILURES=$((FAILURES + 1))
          fi
          
          # Test Kubernetes API
          echo "Testing Kubernetes API..."
          if curl -k -f -s --connect-timeout 10 https://100.64.0.6:6443/healthz > /dev/null; then
            echo "✅ Kubernetes API: OK"
          else
            echo "❌ Kubernetes API: FAILED"
            FAILURES=$((FAILURES + 1))
          fi
          
          echo "Total failures: $FAILURES"
          echo "failures=$FAILURES" >> $GITHUB_OUTPUT

      - name: Test DNS Resolution
        run: |
          echo "Testing DNS resolution via Tailscale..."
          
          # Test internal DNS
          nslookup grafana.ncrmro.com || echo "DNS resolution failed for grafana.ncrmro.com"
          nslookup vaultwarden.ncrmro.com || echo "DNS resolution failed for vaultwarden.ncrmro.com"
          
          # Test external DNS
          nslookup google.com || echo "External DNS resolution failed"

      - name: Generate Report
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          # Service Health Check Report
          
          **Timestamp:** $(date -u)
          **Total Failures:** ${{ steps.service-test.outputs.failures }}
          
          ## Service Status
          - Grafana: $([ "${{ steps.service-test.outputs.failures }}" = "0" ] && echo "✅ Healthy" || echo "❓ See logs")
          - Vaultwarden: $([ "${{ steps.service-test.outputs.failures }}" = "0" ] && echo "✅ Healthy" || echo "❓ See logs")
          - AdGuard Home: $([ "${{ steps.service-test.outputs.failures }}" = "0" ] && echo "✅ Healthy" || echo "❓ See logs")
          - Kubernetes API: $([ "${{ steps.service-test.outputs.failures }}" = "0" ] && echo "✅ Healthy" || echo "❓ See logs")
          
          ## Network Information
          - Tailscale Status: Connected
          - DNS Resolution: Working
          EOF

      - name: Alert on Failures
        if: steps.service-test.outputs.failures != '0'
        run: |
          echo "⚠️ Health check detected ${{ steps.service-test.outputs.failures }} service failures"
          # Add your notification logic here:
          # - Send to Slack/Discord
          # - Create GitHub issue
          # - Send email alert
          # Example:
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"Service health check failed: ${{ steps.service-test.outputs.failures }} failures"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Cleanup
        if: always()
        run: |
          sudo tailscale logout || true
          sudo systemctl stop tailscaled || true