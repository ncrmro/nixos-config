#!/usr/bin/env bash

# Script to troubleshoot and fix network issues when connecting Thunderbolt dock
# Logs to /tmp/network-dock-fix.log

LOG_FILE="/tmp/network-dock-fix.log"
TBETH_CONNECTION="tbeth"
WIRELESS_DEVICE="wlp1s0"

log() {
  echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

section() {
  log "====== $1 ======"
}

# Start fresh log file
> "$LOG_FILE"
section "Starting network troubleshooting"

# Log system information
section "System Information"
log "Kernel: $(uname -r)"
log "System time: $(date)"
log "Uptime: $(uptime)"

# Log Thunderbolt device information
section "Thunderbolt Device Information"
if command -v lsusb &>/dev/null; then
  log "USB devices:"
  lsusb | tee -a "$LOG_FILE"
fi

if [ -d "/sys/bus/thunderbolt/devices" ]; then
  log "Thunderbolt devices detected:"
  ls -l /sys/bus/thunderbolt/devices | tee -a "$LOG_FILE"
  
  for device in /sys/bus/thunderbolt/devices/*; do
    if [ -f "$device/authorized" ]; then
      auth=$(cat "$device/authorized")
      vendor=$(cat "$device/vendor_name" 2>/dev/null || echo "Unknown")
      device_name=$(cat "$device/device_name" 2>/dev/null || echo "Unknown")
      log "Thunderbolt device: $vendor $device_name - Authorized: $auth"
    fi
  done
else
  log "No Thunderbolt bus detected"
fi

# Log detailed network device information
section "Detailed Network Device Information"
log "Network devices (ip addr):"
ip -d addr | tee -a "$LOG_FILE"

log "Network link status:"
ip -d link | tee -a "$LOG_FILE"

log "Network Manager devices:"
nmcli -f all device | tee -a "$LOG_FILE"

log "Active connections:"
nmcli -f all connection show --active | tee -a "$LOG_FILE"

log "All available connections:"
nmcli -f all connection show | tee -a "$LOG_FILE"

# Check for DHCP leases
section "DHCP Information"
if command -v journalctl &>/dev/null; then
  log "Recent DHCP client activity (last 2 minutes):"
  journalctl -u NetworkManager --since "2 minutes ago" | grep -i "dhcp" | tee -a "$LOG_FILE"
fi

# Test DNS resolution
section "DNS Resolution Tests"
log "DNS configuration:"
cat /etc/resolv.conf | tee -a "$LOG_FILE"

log "DNS resolution test for google.com:"
if host google.com &>/dev/null; then
  host google.com | tee -a "$LOG_FILE"
  log "DNS resolution working for google.com"
else
  log "DNS resolution FAILED for google.com"
fi

# Test internet connectivity
section "Internet Connectivity Test"
if ping -c 1 8.8.8.8 &>/dev/null; then
  log "Internet is working! No action needed."
  exit 0
fi

# Begin fix procedure
section "Internet Connectivity Fix Procedure"
log "Internet connectivity failed. Starting fix procedure..."

# Step 1: Disconnect wireless if it's active
if nmcli -t -f DEVICE,STATE device | grep "^$WIRELESS_DEVICE:connected" &>/dev/null; then
  log "Disconnecting wireless device $WIRELESS_DEVICE"
  nmcli device disconnect "$WIRELESS_DEVICE"
  
  # Add detailed output for the disconnect action
  log "Wireless disconnect result: $?"
  log "Wireless status after disconnect attempt:"
  nmcli device status | grep "$WIRELESS_DEVICE" | tee -a "$LOG_FILE"
  
  sleep 2
fi

# Step 2: Check if thunderbolt ethernet exists and try to connect
if nmcli connection show | grep "$TBETH_CONNECTION" &>/dev/null; then
  log "Found thunderbolt ethernet connection ($TBETH_CONNECTION)"
  
  # Get interface name for tbeth connection
  tb_interface=$(nmcli -g connection.interface-name connection show "$TBETH_CONNECTION" 2>/dev/null)
  if [ -n "$tb_interface" ]; then
    log "Thunderbolt ethernet interface: $tb_interface"
    
    # Check interface status
    log "Interface status before connection attempt:"
    ip link show dev "$tb_interface" 2>/dev/null | tee -a "$LOG_FILE" || log "Interface not found in ip link"
  else
    log "Could not determine interface name for $TBETH_CONNECTION"
  fi
  
  log "Attempting to connect to thunderbolt ethernet ($TBETH_CONNECTION)"
  connect_output=$(nmcli connection up "$TBETH_CONNECTION" 2>&1)
  connect_status=$?
  log "Connection attempt output: $connect_output"
  log "Connection attempt exit code: $connect_status"
  
  sleep 3
  
  # Log post-connection interface status
  if [ -n "$tb_interface" ]; then
    log "Interface status after connection attempt:"
    ip link show dev "$tb_interface" 2>/dev/null | tee -a "$LOG_FILE" || log "Interface not found in ip link"
    log "IP address configuration after connection attempt:"
    ip addr show dev "$tb_interface" 2>/dev/null | tee -a "$LOG_FILE" || log "Interface not found in ip addr"
  fi
  
  # Test if that fixed it
  if ping -c 1 8.8.8.8 &>/dev/null; then
    log "Success! Internet is now working after connecting to $TBETH_CONNECTION"
    
    # Additional successful connection information
    log "Working connection details:"
    nmcli connection show --active "$TBETH_CONNECTION" | tee -a "$LOG_FILE"
    log "Working route table:"
    ip route | tee -a "$LOG_FILE"
    
    exit 0
  else
    log "Still no internet after connecting to $TBETH_CONNECTION"
    
    # Additional failure diagnostics
    log "Checking for common failure scenarios:"
    
    # Check if interface has IP
    if [ -n "$tb_interface" ] && ! ip addr show dev "$tb_interface" 2>/dev/null | grep -q "inet "; then
      log "No IP address assigned to $tb_interface - possible DHCP failure"
    fi
    
    # Check default route
    if ! ip route | grep -q "default"; then
      log "No default route found - possible gateway issue"
    fi
  fi
else
  log "Thunderbolt ethernet connection ($TBETH_CONNECTION) not found"
  
  # Try to detect any ethernet devices that might be from the dock
  log "Searching for potential dock ethernet devices:"
  eth_devices=$(ip link | grep -i "eth" | cut -d: -f2 | tr -d ' ')
  if [ -n "$eth_devices" ]; then
    log "Found ethernet devices: $eth_devices"
    for dev in $eth_devices; do
      log "Details for $dev:"
      ip -d link show dev "$dev" | tee -a "$LOG_FILE"
    done
  else
    log "No ethernet devices found"
  fi
fi

# Additional diagnostics
section "Extended Network Diagnostics"

log "Network routing table:"
ip route | tee -a "$LOG_FILE"

log "Network statistics:"
ip -s link | tee -a "$LOG_FILE"

log "ARP table (IP to MAC mappings):"
ip neigh | tee -a "$LOG_FILE"

# Check for common network services
if command -v ss &>/dev/null; then
  log "Listening network services:"
  ss -tuln | tee -a "$LOG_FILE"
fi

# NetworkManager status
log "NetworkManager status:"
nmcli general status | tee -a "$LOG_FILE"

# Check for NetworkManager dispatch scripts
if [ -d "/etc/NetworkManager/dispatcher.d" ]; then
  log "NetworkManager dispatcher scripts:"
  ls -la /etc/NetworkManager/dispatcher.d/ | tee -a "$LOG_FILE"
fi

# Final test
section "Final Connectivity Test"
if ping -c 1 8.8.8.8 &>/dev/null; then
  log "Internet is now working!"
  log "Final successful connection details:"
  nmcli connection show --active | tee -a "$LOG_FILE"
else
  log "Internet is still not working after attempted fixes."
  log "Consider manually reconnecting preferred connection or rebooting."
  
  # Attempt to provide recovery suggestions
  log "Recovery suggestions:"
  log "1. Try manually connecting: nmcli connection up YOUR_CONNECTION_NAME"
  log "2. Try restarting NetworkManager: sudo systemctl restart NetworkManager"
  log "3. Check physical connections on the dock and ensure it has power"
  log "4. Try unplugging and replugging the Thunderbolt dock"
  log "5. Consider rebooting the system as a last resort"
fi

section "Troubleshooting complete"
log "Full log available at $LOG_FILE"