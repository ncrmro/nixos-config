---
apiVersion: v1
kind: ConfigMap
metadata:
  name: eonmun-strapi-config
  namespace: default
data:
  NODE_ENV: "production"
  HOST: "0.0.0.0"
  PORT: "1337"
  FLAG_NPS: "true"
  FLAG_PROMOTE_EE: "true"
  DATABASE_CLIENT: "postgres"
  DATABASE_URL: "postgresql://eonmunstrapi:r%7D%3F%7DmB18tm7_%3EO2NO%2A58wR9%2A@postgres-primary.default.svc:5432/eonmun-strapi"
  DATABASE_SSL: "true"
  DATABASE_SSL_REJECT_UNAUTHORIZED: "false"
  APP_KEYS: "I9pc4JG9bu/KI0SOi57SZFCJzdvwOnXZujYIWHk16Y0=,UY0xukeojmIJNVFmVdl8RnjpdPHBbKfEJ1Nc63pAdf4=,+3If5+IZJnBQqkXzdViDs5HJGHgGGMlOnL00+/DtIjk=,DzR6i7DWZuE8oJKOQmvC9x/8Qi26lXz8AcI1UMpKclI="
  API_TOKEN_SALT: "K8CWUxL0dGkGitqPUFFsMpsJx9Jogd7aM+IPJvWt19k="
  ADMIN_JWT_SECRET: "sEiNAYiVfPncxTAvwkBltzgJXopVAjTg1tCIDP149KY="
  TRANSFER_TOKEN_SALT: "cQy6kLcjKfu4nKV23m1m0LaYlZSuN/R+P85qO/Lz7ck="
  ENCRYPTION_KEY: "ivGfDP2DgCicpOeo086L2kx0p/CE5y2W6eceTVZw8CM="
  JWT_SECRET: +xmjjp+1haWe/E08bvRTU6HOikT3+EXkx36bdmI79sQ=

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eonmun-strapi-deployment
  namespace: default
  labels:
    app: strapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: strapi
  template:
    metadata:
      labels:
        app: strapi
    spec:
      imagePullSecrets:
      - name: ghcr
      containers:
      - name: strapi
        image: ghcr.io/eonmun/eonmun/strapi:latest
        ports:
        - containerPort: 1337
        envFrom:
        - configMapRef:
            name: eonmun-strapi-config
        env:
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /admin
            port: 1337
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /admin
            port: 1337
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: uploads
          mountPath: /app/public/uploads
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: strapi-uploads-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: eonmun-strapi
  namespace: default
spec:
  selector:
    app: strapi
  ports:
  - protocol: TCP
    port: 1337
    targetPort: 1337
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: strapi-uploads-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi 

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # Reference the Origin CA Issuer you created above, which must be in the same namespace.
    cert-manager.io/issuer: letsencrypt-dns-cloudflare
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-group: cert-manager.io
  name: eonmun-strapi
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: strapi.eonmun.com
      http:
        paths:
         - pathType: Prefix
           path: /
           backend:
              service:
                name: eonmun-strapi
                port:
                  number: 1337
  tls:
    # specifying a host in the TLS section will tell cert-manager what
    # DNS SANs should be on the created certificate.
    - hosts:
        - strapi.eonmun.com
      # cert-manager will create this secret
      secretName: strapi-tls